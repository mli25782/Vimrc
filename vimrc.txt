"syntax highlighting"
syntax on

filetype plugin on
set noerrorbells
set tabstop=2 softtabstop=2
set shiftwidth=2
set expandtab
set smartindent
" Line number"
set nu 
set relativenumber
set smartcase incsearch
" allow backspace delete "
set backspace=indent,eol,start

call plug#begin('~/.vim/plugged')
" post install (yarn install | npm install) then load plugin only for editing supported files
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
Plug 'tpope/vim-fugitive'
Plug 'vim-airline/vim-airline'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'iamcco/mathjax-support-for-mkdp'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install' }
Plug 'vimwiki/vimwiki'
Plug 'SirVer/ultisnips'
Plug 'epilande/vim-react-snippets'
Plug 'francoiscabrol/ranger.vim'
Plug 'mattn/emmet-vim'
Plug 'jiangmiao/auto-pairs'
Plug 'machakann/vim-highlightedyank'
Plug 'voldikss/vim-floaterm'
Plug 'gruvbox-community/gruvbox'
Plug 'leafgarland/typescript-vim'
Plug 'jremmen/vim-ripgrep'
Plug 'itchyny/lightline.vim'
Plug 'dense-analysis/ale'
Plug 'tpope/vim-commentary'
Plug 'christoomey/vim-system-copy'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'pangloss/vim-javascript'
Plug 'vim-syntastic/syntastic'
call plug#end()

colorscheme gruvbox
set bg=dark

highlight Normal ctermbg=None
highlight LineNr ctermfg=yellow

"detect git root and use gitignore for faster rg"
if executable('rg')
  let g:rg_derive_root='true'
endif

let mapleader = " "

"fzf find"
nnoremap <leader>f :FZF<CR>

"take visual lines and move then up or down"
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

"tab swap"
nnoremap <leader><Tab> <C-^>

"space space exits out of insert mode"
imap <leader><SPACE> <ESC>

"window split movement"
nnoremap <leader>h :wincmd h<CR>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>

"window resize"
nnoremap <silent> <Leader>+ :vertical resize +5<CR>
nnoremap <silent> <Leader>- :vertical resize -5<CR>

"open file tree in new split"
nnoremap <leader>t :wincmd v<bar> :Ex <bar> :vertical resize 30<CR>

"take visual lines and move then up or down"
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

"ripgrep"
nnoremap <Leader>rg :Rg<SPACE>

"floaterm swap screen"
let g:floaterm_keymap_new    = '<F7>'
let g:floaterm_keymap_prev   = '<F8>'
let g:floaterm_keymap_next   = '<F9>'
let g:floaterm_keymap_toggle = '<F12>'

"disable default ranger"
let g:ranger_map_keys = 0
map <leader>r :RangerWorkingDirectory<CR>
map <leader>md :MarkdownPreview<CR>

"react code snippets""
let g:UltiSnipsExpandTrigger="<C-l>"

"Use markdown for vimwiki"
let g:vimwiki_list = [{'path': '~/vimwiki/',
      \ 'syntax': 'markdown', 'ext': '.md'}]

"disable autoload md file when open"
let g:instant_markdown_autostart = 0

"Git fugitive commands"
"git status"
nmap <leader>gs :G<CR> 
"get git diff from right side (merge conflict resolve)"
nmap <leader>gj :diffget //3<CR>
"get git diff from left side (merge conflict resolve)"
map <leader>gf :diffget //2<CR>
